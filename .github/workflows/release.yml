name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: win
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          
      - name: Setup mise
        uses: jdx/mise-action@v2
        with:
          version: latest
          cache: true
          
      - name: Install tools
        run: mise install
        
      - name: Install dependencies
        run: mise run install
        
      - name: Run tests
        run: mise run test
        
      - name: Build application
        run: mise run build
        
      - name: Package application
        run: mise run dist:${{ matrix.platform }}
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ matrix.platform }}
          path: |
            dist-electron/*.dmg
            dist-electron/*.exe
            dist-electron/*.AppImage
            dist-electron/*.deb
            dist-electron/*.rpm
            dist-electron/*.msi
            dist-electron/*.zip
          
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-and-release
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
          files: |
            artifacts/**/*.dmg
            artifacts/**/*.exe
            artifacts/**/*.AppImage
            artifacts/**/*.deb
            artifacts/**/*.rpm
            artifacts/**/*.msi
            artifacts/**/*.zip
          body: |
            ## What's Changed
            
            <!-- Add release notes here -->
            
            ## Installation
            
            ### macOS
            Download the `.dmg` file and drag the app to your Applications folder.
            
            ### Windows
            Download the `.exe` installer and run it.
            
            ### Linux
            - **AppImage**: Download and make executable with `chmod +x *.AppImage`
            - **DEB**: Install with `sudo dpkg -i *.deb`
            - **RPM**: Install with `sudo rpm -i *.rpm`
            
            ## Checksums
            
            <!-- Checksums will be added automatically -->
            
          generate_release_notes: true